apiVersion: v1
kind: ConfigMap
metadata:
  name: cyclical-traffic
  namespace: loadgen
data:
  apply_cyclical_traffic.sh: "#!/bin/bash\n\nwhile [ /bin/true ]; do\n\tkubectl scale
    deploy -n acme --replicas=1 loadgenerator\n\tsleep 600\n\tkubectl scale deploy
    -n acme --replicas=6 loadgenerator\n\tsleep 600\n\tkubectl scale deploy -n acme
    --replicas=2 loadgenerator\n\tsleep 600\ndone\n"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-kubectl-scale-deploy
  namespace: loadgen
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scale-deployments
rules:
  - apiGroups: ["apps"]
    resources:
      - deployments
      - deployments/scale
    verbs:
      - get
      - list
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: modify-deployments-to-sa
  namespace: acme
subjects:
  - kind: ServiceAccount
    name: local-kubectl-scale-deploy
    namespace: loadgen
roleRef:
  kind: ClusterRole
  name: scale-deployments
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: acme-cyclical-traffic
  namespace: loadgen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: acme-cyclical-traffic
  template:
    metadata:
      labels:
        app: acme-cyclical-traffic
        version: v1
    spec:
      serviceAccountName: local-kubectl-scale-deploy
      volumes:
      - name: cyclical-traffic
        configMap:
          name: cyclical-traffic
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.17
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
        args:
        - "/cyclical-traffic/apply_cyclical_traffic.sh"
        tty: true
        resources:
          requests:
            memory: "10Mi"
            cpu: "5m"
        volumeMounts:
        - name: cyclical-traffic
          mountPath: /cyclical-traffic
      restartPolicy: Always
